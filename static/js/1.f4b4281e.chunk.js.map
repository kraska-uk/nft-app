{"version":3,"sources":["components/Page.js","utils/getExternalLinkProps.js","hooks/index.ts","connectors/NetworkConnector.ts","connectors/index.ts","components/Seo.js","components/Header.js","hooks/useAuth.ts","components/Footer.js","components/Svg/Svg.tsx","modal/WalletModal/config.tsx","modal/WalletModal/icons/Metamask.tsx","modal/WalletModal/WalletCard.tsx","modal/WalletModal/ConnectModal.tsx","components/Link/Link.tsx","components/Svg/Icons/OpenNew.tsx","components/Link/LinkExternal.tsx","modal/WalletModal/CopyToClipboard.tsx","modal/WalletModal/AccountModal.tsx","modal/WalletModal/useWalletModal.tsx"],"names":["hot","module","title","description","meta","children","style","minHeight","getExternalLinkProps","target","rel","useActiveWeb3React","context","useWeb3ReactCore","contextNetwork","NetworkContextName","active","useEagerConnect","activate","useState","tried","setTried","useEffect","injected","isAuthorized","then","undefined","catch","RequestError","message","code","data","Error","MiniRpcProvider","chainId","url","batchWaitTimeMs","isMetaMask","host","path","nextId","batchTimeoutId","batch","clearBatch","a","console","info","fetch","method","headers","accept","body","JSON","stringify","map","item","request","response","forEach","reject","ok","status","statusText","json","byKey","reduce","memo","current","id","result","resolve","error","sendAsync","callback","params","jsonrpc","toString","promise","Promise","push","setTimeout","this","parsed","URL","pathname","NetworkConnector","urls","defaultChainId","invariant","Object","keys","length","supportedChainIds","k","Number","providers","currentChainId","accumulator","provider","account","AbstractConnector","1","4","InjectedConnector","connectorsByName","ConnectorNames","Injected","metaDescription","defaultTitle","appName","htmlAttributes","lang","titleTemplate","name","content","property","concat","href","library","useAuth","login","logout","useWalletModal","onPresentConnectModal","onPresentAccountModal","accountShort","substring","as","fixed","size","inverted","Item","header","Link","to","routerPaths","main","NavLink","newWallet","mint","admin","position","color","onClick","useWeb3React","deactivate","useCallback","connectorID","connector","window","localStorage","removeItem","connectorLocalStorageKey","UnsupportedChainIdError","toast","NoEthereumProviderError","UserRejectedRequestErrorInjected","vertical","textAlign","link","horizontal","Date","getFullYear","Svg","styled","svg","defaultProps","width","xmlns","connectors","icon","props","viewBox","cx","cy","r","fill","d","connectorId","WalletCard","walletConfig","onDismiss","Icon","List","Button","fluid","className","compact","justifyContent","margin","variant","setItem","toLocaleLowerCase","ConnectModal","config","entry","index","external","internalProps","LinkExternal","OpenNew","CopyToClipboard","toCopy","isTooltipDisplayed","setIsTooltipDisplayed","displayTooltip","small","bold","navigator","clipboard","permissions","writeText","document","queryCommandSupported","el","createElement","value","appendChild","select","execCommand","removeChild","copyToClipboardWithCommand","Popup","AccountModal","scale","useModal"],"mappings":"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","file":"static/js/1.f4b4281e.chunk.js","sourcesContent":["import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport Seo from './Seo';\nimport Header from './Header';\nimport Footer from './Footer';\n\n\n\nfunction Page({ title, description, meta, children }) {\n  return (\n    <>\n      <Seo\n        title={title}\n        description={description}\n        meta={meta ? meta : []}\n      />\n      <Header />\n      <main style={{ minHeight: '100vh', }} >\n        {children}\n      </main>\n      <Footer />\n    </>\n  );\n};\n\nexport default hot(module)(Page);\n","export default function getExternalLinkProps() {\n  return ({\n    target: '_blank',\n    rel: 'noreferrer noopener',\n  });\n};\n","// https://github.com/pancakeswap/pancake-swap-interface-v1/blob/master/src/hooks/index.ts\nimport { Web3Provider } from '@ethersproject/providers';\nimport { useWeb3React as useWeb3ReactCore } from '@web3-react/core';\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types';\nimport { useEffect, useState } from 'react';\nimport { injected } from '../connectors';\nimport { ChainId, NetworkContextName } from '../constants/index';\n\n\n\nexport function useActiveWeb3React(): Web3ReactContextInterface<Web3Provider> & { chainId?: ChainId } {\n  const context = useWeb3ReactCore<Web3Provider>();\n  const contextNetwork = useWeb3ReactCore<Web3Provider>(NetworkContextName);\n  return context.active ? context : contextNetwork;\n}\n\n// https://github.com/NoahZinsmeister/web3-react/blob/v6/example/hooks.ts\n// try to eagerly connect to an injected provider, if it exists and has granted access already\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3ReactCore();\n\n  const [tried, setTried] = useState(false);\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true);\n        });\n      } else {\n        setTried(true);\n      }\n    })\n  }, []) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true);\n    }\n  }, [tried, active]);\n\n  return tried;\n}\n\nexport function useInactiveListener(suppress: boolean = false) {\n  const { active, error, activate } = useWeb3ReactCore();\n\n  useEffect((): any => {\n    const { ethereum } = window as any;\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\");\n        activate(injected);\n      }\n      const handleChainChanged = (chainId: string | number) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId);\n        activate(injected);\n      }\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts);\n        if (accounts.length > 0) {\n          activate(injected);\n        }\n      }\n      const handleNetworkChanged = (networkId: string | number) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId);\n        activate(injected);\n      }\n\n      ethereum.on('connect', handleConnect);\n      ethereum.on('chainChanged', handleChainChanged);\n      ethereum.on('accountsChanged', handleAccountsChanged);\n      ethereum.on('networkChanged', handleNetworkChanged);\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect);\n          ethereum.removeListener('chainChanged', handleChainChanged);\n          ethereum.removeListener('accountsChanged', handleAccountsChanged);\n          ethereum.removeListener('networkChanged', handleNetworkChanged);\n        }\n      }\n    }\n  }, [active, error, suppress, activate]);\n}\n","// https://github.com/pancakeswap/pancake-swap-interface-v1/blob/master/src/connectors/NetworkConnector.ts\nimport { ConnectorUpdate } from '@web3-react/types';\nimport { AbstractConnector } from '@web3-react/abstract-connector';\nimport invariant from 'tiny-invariant';\n\n\n\ninterface NetworkConnectorArguments {\n  urls: { [chainId: number]: string };\n  defaultChainId?: number;\n}\n\n// taken from ethers.js, compatible interface with web3 provider\ntype AsyncSendable = {\n  isMetaMask?: boolean;\n  host?: string;\n  path?: string;\n  sendAsync?: (request: any, callback: (error: any, response: any) => void) => void;\n  send?: (request: any, callback: (error: any, response: any) => void) => void;\n}\n\nclass RequestError extends Error {\n  constructor(message: string, public code: number, public data?: unknown) {\n    super(message);\n  }\n}\n\ninterface BatchItem {\n  request: { jsonrpc: '2.0'; id: number; method: string; params: unknown };\n  resolve: (result: any) => void;\n  reject: (error: Error) => void;\n}\n\nclass MiniRpcProvider implements AsyncSendable {\n  public readonly isMetaMask: false = false;\n\n  public readonly chainId: number;\n\n  public readonly url: string;\n\n  public readonly host: string;\n\n  public readonly path: string;\n\n  public readonly batchWaitTimeMs: number;\n\n  private nextId = 1;\n\n  private batchTimeoutId: ReturnType<typeof setTimeout> | null = null;\n\n  private batch: BatchItem[] = [];\n\n  constructor(chainId: number, url: string, batchWaitTimeMs?: number) {\n    this.chainId = chainId;\n    this.url = url;\n    const parsed = new URL(url);\n    this.host = parsed.host;\n    this.path = parsed.pathname;\n    // how long to wait to batch calls\n    this.batchWaitTimeMs = batchWaitTimeMs ?? 50;\n  }\n\n  public readonly clearBatch = async () => {\n    console.info('Clearing batch', this.batch);\n    const { batch } = this;\n    this.batch = [];\n    this.batchTimeoutId = null;\n    let response: Response;\n    try {\n      response = await fetch(this.url, {\n        method: 'POST',\n        headers: { 'content-type': 'application/json', accept: 'application/json' },\n        body: JSON.stringify(batch.map((item) => item.request)),\n      });\n    } catch (error) {\n      batch.forEach(({ reject }) => reject(new Error('Failed to send batch call')));\n      return;\n    }\n\n    if (!response.ok) {\n      batch.forEach(({ reject }) => reject(new RequestError(`${response.status}: ${response.statusText}`, -32000)));\n      return;\n    }\n\n    let json\n    try {\n      json = await response.json();\n    } catch (error) {\n      batch.forEach(({ reject }) => reject(new Error('Failed to parse JSON response')));\n      return;\n    }\n    const byKey = batch.reduce<{ [id: number]: BatchItem }>((memo, current) => {\n      memo[current.request.id] = current\n      return memo\n    }, {});\n    // eslint-disable-next-line no-restricted-syntax\n    for (const result of json) {\n      const {\n        resolve,\n        reject,\n        request: { method },\n      } = byKey[result.id]\n      if (resolve !== undefined && reject !== undefined) {\n        if ('error' in result) {\n          reject(new RequestError(result?.error?.message, result?.error?.code, result?.error?.data))\n        } else if ('result' in result) {\n          resolve(result.result)\n        } else {\n          reject(new RequestError(`Received unexpected JSON-RPC response to ${method} request.`, -32000, result))\n        }\n      }\n    }\n  }\n\n  public readonly sendAsync = (\n    request: { jsonrpc: '2.0'; id: number | string | null; method: string; params?: any },\n    callback: (error: any, response: any) => void\n  ): void => {\n    this.request(request.method, request.params)\n      .then((result) => callback(null, { jsonrpc: '2.0', id: request.id, result }))\n      .catch((error) => callback(error, null));\n  }\n\n  public readonly request = async (\n    method: string | { method: string; params: unknown[] },\n    params?: any\n  ): Promise<unknown> => {\n    if (typeof method !== 'string') {\n      return this.request(method.method, method.params);\n    }\n    if (method === 'eth_chainId') {\n      return `0x${this.chainId.toString(16)}`;\n    }\n    const promise = new Promise((resolve, reject) => {\n      this.batch.push({\n        request: {\n          jsonrpc: '2.0',\n          id: this.nextId++,\n          method,\n          params,\n        },\n        resolve,\n        reject,\n      });\n    });\n    this.batchTimeoutId = this.batchTimeoutId ?? setTimeout(this.clearBatch, this.batchWaitTimeMs);\n    return promise;\n  }\n}\n\nexport class NetworkConnector extends AbstractConnector {\n  private readonly providers: { [chainId: number]: MiniRpcProvider };\n\n  private currentChainId: number;\n\n  constructor({ urls, defaultChainId }: NetworkConnectorArguments) {\n    invariant(defaultChainId || Object.keys(urls).length === 1, 'defaultChainId is a required argument with >1 url');\n    super({ supportedChainIds: Object.keys(urls).map((k): number => Number(k)) });\n\n    this.currentChainId = defaultChainId || Number(Object.keys(urls)[0]);\n    this.providers = Object.keys(urls).reduce<{ [chainId: number]: MiniRpcProvider }>((accumulator, chainId) => {\n      accumulator[Number(chainId)] = new MiniRpcProvider(Number(chainId), urls[Number(chainId)]);\n      return accumulator;\n    }, {});\n  }\n\n  public get provider(): MiniRpcProvider {\n    return this.providers[this.currentChainId];\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    return { provider: this.providers[this.currentChainId], chainId: this.currentChainId, account: null };\n  }\n\n  public async getProvider(): Promise<MiniRpcProvider> {\n    return this.providers[this.currentChainId];\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.currentChainId;\n  }\n\n  public async getAccount(): Promise<null> {\n    return null;\n  }\n\n  public deactivate() {\n    return null;\n  }\n}\n\nexport default NetworkConnector;\n","// https://github.com/pancakeswap/pancake-swap-interface-v1/blob/master/src/connectors/index.ts\nimport { Web3Provider } from '@ethersproject/providers';\nimport { InjectedConnector } from '@web3-react/injected-connector';\nimport { NetworkConnector } from './NetworkConnector';\nimport { ConnectorNames } from '../constants';\n\n\n\nexport const network = new NetworkConnector({\n  urls: {\n    1: 'https://localhost/',\n    4: 'https://localhost/',\n  },\n  defaultChainId: 1,\n});\n\nlet networkLibrary: Web3Provider | undefined;\nexport function getNetworkLibrary(): Web3Provider {\n  // eslint-disable-next-line no-return-assign\n  return (networkLibrary = networkLibrary ?? new Web3Provider(network.provider as any));\n}\n\nexport const injected = new InjectedConnector({\n  //supportedChainIds: [1],\n});\n\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n}\n","import * as React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { Helmet } from 'react-helmet';\nimport { appName } from '../constants';\n\n\n\nfunction Seo({ title, description, meta, }) {\n  const metaDescription = description;\n  const defaultTitle = appName;\n  const twitter = null;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang: 'en',\n      }}\n\n      title={title}\n      defaultTitle={defaultTitle}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : undefined}\n\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: twitter || '',\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    >\n      <meta name=\"viewport\" content=\"initial-scale=1, width=device-width\" />\n      <link\n        href=\"https://fonts.googleapis.com/css?family=Roboto:400,500,700&display=swap\"\n        rel=\"stylesheet\"\n      />\n    </Helmet>\n  )\n}\n\nexport default hot(module)(Seo);\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { Segment, Container, Menu } from 'semantic-ui-react';\nimport { NavLink, Link } from 'react-router-dom';\nimport { routerPaths } from '../router/helper';\nimport { appName } from '../constants';\n//import * as S from '../store/selectors';\n//import * as A from '../store/actions';\n\n\nimport { useEagerConnect, useActiveWeb3React } from '../hooks/index';\nimport useAuth from '../hooks/useAuth';\nimport { useWalletModal } from '../modal/WalletModal';\n\n\nfunction Header() {\n  const triedEager = useEagerConnect();\n  const context = useActiveWeb3React();\n  const { library, chainId, account, active, error } = context;\n  const { login, logout } = useAuth();\n  const { onPresentConnectModal, onPresentAccountModal } = useWalletModal(login, logout, account);\n\n  const accountShort = account\n    ? `${account.substring(0, 6)}...${account.substring(account.length - 4)}`\n    : 'Connect wallet';\n\n  return (\n    <Segment as={'header'}>\n      <Menu fixed='top' size='large' inverted>\n        <Container>\n          <Menu.Item header as={Link} to={routerPaths.main}>\n            {appName}\n          </Menu.Item>\n          <Menu.Item header as={NavLink} to={routerPaths.newWallet}>\n            New Wallet\n          </Menu.Item>\n          <Menu.Item header as={NavLink} to={routerPaths.mint}>\n            Mint\n          </Menu.Item>\n          <Menu.Item header as={NavLink} to={routerPaths.admin}>\n            Admin\n          </Menu.Item>\n\n          <Menu.Item position='right'\n            style={{ color: chainId === 1 ? 'green' : 'red' }}\n          >{chainId === 1 ? 'Mainnet' : 'Testnet'}</Menu.Item>\n          <Menu.Item\n            onClick={account ? onPresentAccountModal : onPresentConnectModal}\n          >{accountShort}</Menu.Item>\n        </Container>\n      </Menu>\n    </Segment>\n  );\n};\n\nexport default hot(module)(Header);\n","import { useCallback } from 'react';\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core';\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector';\nimport { ConnectorNames } from '../constants';\nimport { connectorLocalStorageKey } from '../constants/index';\nimport { connectorsByName } from '../connectors';\nimport { toast } from 'react-toastify';\n\n\n\nconst useAuth = () => {\n  const { activate, deactivate } = useWeb3React();\n\n  const login = useCallback((connectorID: ConnectorNames) => {\n    const connector = connectorsByName[connectorID];\n    if (connector) {\n      activate(connector, async (error: Error) => {\n        window.localStorage.removeItem(connectorLocalStorageKey);\n        if (error instanceof UnsupportedChainIdError) {\n          toast.error('Unsupported Chain Id. Unsupported Chain Id Error. Check your chain Id.');\n        } else if (error instanceof NoEthereumProviderError) {\n          toast.error('Provider Error. No provider was found');\n        } else if (\n          error instanceof UserRejectedRequestErrorInjected\n        ) {\n          toast.error('Authorization Error. Please authorize to access your account');\n        } else {\n          toast.error(`${error.name} ${error.message}`);\n        }\n      });\n    } else {\n      toast.error(\"Can't find connector. The connector config is wrong\");\n    }\n  }, []);\n\n  return { login, logout: deactivate };\n}\n\nexport default useAuth;\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { Segment, Container, List } from 'semantic-ui-react';\n//import { Link } from 'react-router-dom';\nimport { appName } from '../constants';\n//import { routerPaths } from '../router/helper';\n//import getExternalLinkProps from '../utils/getExternalLinkProps';\n\n\n\nfunction Footer() {\n  return (\n    <Segment as={'footer'} inverted vertical >\n      <Container textAlign='center'>\n        <List inverted link horizontal>\n          <List.Item>\n            {appName} © {new Date().getFullYear()}.\n          </List.Item>\n        </List>\n      </Container>\n    </Segment >\n  );\n};\n\nexport default hot(module)(Footer);\n","// https://github.com/pancakeswap/pancake-toolkit/blob/master/packages/pancake-uikit/src/components/Svg/Svg.tsx\nimport styled, { css, keyframes } from 'styled-components';\nimport { SvgProps } from './types';\n\n\n\nconst Svg = styled.svg<SvgProps>`\n  align-self: center; // Safari fix\n  flex-shrink: 0;\n`;\n\nSvg.defaultProps = {\n  color: 'text',\n  width: '20px',\n  xmlns: 'http://www.w3.org/2000/svg',\n};\n\nexport default Svg;\n","import Metamask from './icons/Metamask';\nimport MathWallet from './icons/MathWallet';\nimport TokenPocket from './icons/TokenPocket';\nimport TrustWallet from './icons/TrustWallet';\n//import WalletConnect from './icons/WalletConnect';\nimport BinanceChain from './icons/BinanceChain';\nimport SafePalWallet from './icons/SafePalWallet';\nimport { Config } from './types';\nimport { ConnectorNames } from '../../constants';\n\n\n\nconst connectors: Config[] = [\n  {\n    title: 'MetaMask',\n    icon: Metamask,\n    connectorId: ConnectorNames.Injected,\n  },\n];\n\nexport default connectors;\nexport const connectorLocalStorageKey = 'connectorId';\n","import React from 'react';\nimport Svg from '../../../components/Svg/Svg';\nimport { SvgProps } from '../../../components/Svg/types';\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox='0 0 96 96' {...props}>\n      <circle cx='48' cy='48' r='48' fill='white' />\n      <path d='M77.7602 16.9155L51.9419 36.0497L56.7382 24.7733L77.7602 16.9155Z' fill='#E17726' />\n      <path d='M18.2656 16.9155L43.8288 36.2283L39.2622 24.7733L18.2656 16.9155Z' fill='#E27625' />\n      <path d='M68.4736 61.2808L61.6108 71.7918L76.3059 75.8482L80.4899 61.5104L68.4736 61.2808Z' fill='#E27625' />\n      <path d='M15.5356 61.5104L19.6941 75.8482L34.3892 71.7918L27.5519 61.2808L15.5356 61.5104Z' fill='#E27625' />\n      <path d='M33.5984 43.5251L29.491 49.699L44.0584 50.3624L43.5482 34.6724L33.5984 43.5251Z' fill='#E27625' />\n      <path d='M62.4274 43.525L52.2991 34.4937L51.9419 50.3622L66.5094 49.6989L62.4274 43.525Z' fill='#E27625' />\n      <path d='M34.3892 71.7922L43.1654 67.5316L35.6137 61.6128L34.3892 71.7922Z' fill='#E27625' />\n      <path d='M52.8345 67.5316L61.6107 71.7922L60.3861 61.6128L52.8345 67.5316Z' fill='#E27625' />\n      <path d='M61.6107 71.7923L52.8345 67.5317L53.5233 73.2465L53.4468 75.6446L61.6107 71.7923Z' fill='#D5BFB2' />\n      <path d='M34.3892 71.7923L42.5531 75.6446L42.502 73.2465L43.1654 67.5317L34.3892 71.7923Z' fill='#D5BFB2' />\n      <path d='M42.7062 57.8369L35.4097 55.6939L40.5631 53.3213L42.7062 57.8369Z' fill='#233447' />\n      <path d='M53.2937 57.8369L55.4367 53.3213L60.6412 55.6939L53.2937 57.8369Z' fill='#233447' />\n      <path d='M34.3893 71.7918L35.6649 61.2808L27.552 61.5104L34.3893 71.7918Z' fill='#CC6228' />\n      <path d='M60.3352 61.2808L61.6108 71.7918L68.4736 61.5104L60.3352 61.2808Z' fill='#CC6228' />\n      <path\n        d='M66.5094 49.6987L51.9419 50.362L53.294 57.8371L55.4371 53.3215L60.6416 55.6941L66.5094 49.6987Z'\n        fill='#CC6228'\n      />\n      <path\n        d='M35.4098 55.6941L40.5633 53.3215L42.7063 57.8371L44.0584 50.362L29.491 49.6987L35.4098 55.6941Z'\n        fill='#CC6228'\n      />\n      <path d='M29.491 49.6987L35.6139 61.6129L35.4098 55.6941L29.491 49.6987Z' fill='#E27525' />\n      <path d='M60.6414 55.6941L60.3862 61.6129L66.5092 49.6987L60.6414 55.6941Z' fill='#E27525' />\n      <path d='M44.0584 50.3618L42.7063 57.8369L44.4156 66.6641L44.7728 55.0305L44.0584 50.3618Z' fill='#E27525' />\n      <path d='M51.9415 50.3618L51.2527 55.005L51.5843 66.6641L53.2937 57.8369L51.9415 50.3618Z' fill='#E27525' />\n      <path\n        d='M53.2938 57.8374L51.5845 66.6646L52.8346 67.532L60.3862 61.6132L60.6413 55.6943L53.2938 57.8374Z'\n        fill='#F5841F'\n      />\n      <path\n        d='M35.4097 55.6943L35.6138 61.6132L43.1654 67.532L44.4155 66.6646L42.7062 57.8374L35.4097 55.6943Z'\n        fill='#F5841F'\n      />\n      <path\n        d='M53.4468 75.6443L53.5233 73.2462L52.8855 72.6849H43.1143L42.502 73.2462L42.5531 75.6443L34.3892 71.792L37.2465 74.1391L43.0378 78.1445H52.962L58.7533 74.1391L61.6107 71.792L53.4468 75.6443Z'\n        fill='#C0AC9D'\n      />\n      <path\n        d='M52.8346 67.5315L51.5845 66.6641H44.4156L43.1655 67.5315L42.5022 73.2462L43.1145 72.6849H52.8857L53.5235 73.2462L52.8346 67.5315Z'\n        fill='#161616'\n      />\n      <path\n        d='M78.8314 37.2998L80.9999 26.7377L77.7599 16.9155L52.8345 35.4119L62.4271 43.5247L75.9485 47.4791L78.9335 43.984L77.6323 43.04L79.7243 41.1521L78.1426 39.902L80.2091 38.3458L78.8314 37.2998Z'\n        fill='#763E1A'\n      />\n      <path\n        d='M15 26.7377L17.194 37.2998L15.7909 38.3458L17.8574 39.902L16.2756 41.1521L18.3676 43.04L17.0665 43.984L20.0514 47.4791L33.5984 43.5247L43.1655 35.4119L18.2656 16.9155L15 26.7377Z'\n        fill='#763E1A'\n      />\n      <path\n        d='M75.9487 47.4793L62.4272 43.5249L66.5092 49.6989L60.3862 61.613L68.4736 61.511H80.4898L75.9487 47.4793Z'\n        fill='#F5841F'\n      />\n      <path\n        d='M33.5983 43.5249L20.0513 47.4793L15.5356 61.511H27.5519L35.6137 61.613L29.4908 49.6989L33.5983 43.5249Z'\n        fill='#F5841F'\n      />\n      <path\n        d='M51.9415 50.3617L52.8344 35.4115L56.7378 24.7729H39.262L43.1653 35.4115L44.0583 50.3617L44.3899 55.0559L44.4154 66.664H51.5843L51.6099 55.0559L51.9415 50.3617Z'\n        fill='#F5841F'\n      />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from 'react';\nimport { Button, List, } from 'semantic-ui-react';\nimport { connectorLocalStorageKey } from './config';\nimport { Login, Config } from './types';\n\n\n\ninterface Props {\n  walletConfig: Config;\n  login: Login;\n  onDismiss: () => void;\n}\n\nconst WalletCard: React.FC<Props> = ({ login, walletConfig, onDismiss, }) => {\n  const { title, icon: Icon } = walletConfig;\n  return (\n    <List.Item>\n      <Button fluid className='btn-blue wallet-card link' compact\n        style={{ justifyContent: 'space-between', margin: '0', }}\n        width='100%'\n        variant='tertiary'\n        onClick={() => {\n          login(walletConfig.connectorId);\n          window.localStorage.setItem(connectorLocalStorageKey, walletConfig.connectorId);\n          onDismiss();\n        }}\n        id={`wallet-connect-${title.toLocaleLowerCase()}`}\n      >\n        {title}\n        <Icon width='32px' />\n      </Button>\n    </List.Item>\n  );\n};\n\nexport default WalletCard;\n","import React from 'react';\nimport { List, } from 'semantic-ui-react';\n//import { HelpIcon } from '../../components/Svg';\nimport { Modal } from '../ModalProvider';\nimport WalletCard from './WalletCard';\nimport config from './config';\nimport { Login } from './types';\n\n\n\ninterface Props {\n  login: Login;\n  onDismiss?: () => void;\n}\n\n\nconst ConnectModal: React.FC<Props> = ({ login, onDismiss = () => null }) => {\n  return (\n    <Modal title={'Connect to a wallet'} onDismiss={onDismiss}>\n      <List>\n        {config.map((entry, index) => (\n          <WalletCard\n            key={entry.title}\n            login={login}\n            walletConfig={entry}\n            onDismiss={onDismiss}\n          />\n        ))}\n      </List>\n    </Modal>\n  )\n};\n\nexport default ConnectModal;\n","import React from 'react';\nimport { Link as LinkUi } from 'react-router-dom';\nimport getExternalLinkProps from '../../utils/getExternalLinkProps';\nimport { LinkProps } from './types';\n\n\n\n\nconst Link: React.FC<LinkProps> = ({ external, href, to, ...props }) => {\n  const internalProps = external ? getExternalLinkProps() : {};\n  if (external)\n    return <a href={href} {...internalProps} {...props} />;\n  else\n    return <LinkUi to={to} {...internalProps} {...props} />;\n};\n\nLink.defaultProps = {\n  color: 'primary',\n};\n\nexport default Link;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M18 19H6C5.45 19 5 18.55 5 18V6C5 5.45 5.45 5 6 5H11C11.55 5 12 4.55 12 4C12 3.45 11.55 3 11 3H5C3.89 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V13C21 12.45 20.55 12 20 12C19.45 12 19 12.45 19 13V18C19 18.55 18.55 19 18 19ZM14 4C14 4.55 14.45 5 15 5H17.59L8.46 14.13C8.07 14.52 8.07 15.15 8.46 15.54C8.85 15.93 9.48 15.93 9.87 15.54L19 6.41V9C19 9.55 19.45 10 20 10C20.55 10 21 9.55 21 9V4C21 3.45 20.55 3 20 3H15C14.45 3 14 3.45 14 4Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from 'react';\nimport Link from './Link';\nimport { LinkProps } from './types';\nimport OpenNewIcon from '../Svg/Icons/OpenNew';\n\n\n\nconst LinkExternal: React.FC<LinkProps> = ({ children, ...props }) => {\n  return (\n    <Link external {...props}>\n      {children}\n      <OpenNewIcon color='primary' /*ml='4px'*/ />\n    </Link>\n  );\n};\n\nexport default LinkExternal;\n","import React, { useState } from 'react';\nimport { Button, Popup } from 'semantic-ui-react';\n\n\n\ninterface Props {\n  toCopy: string;\n}\n\n\nconst CopyToClipboard: React.FC<Props> = ({ toCopy, children, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false);\n\n  const copyToClipboardWithCommand = (content: string) => {\n    const el = document.createElement('textarea');\n    el.value = content;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n  };\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true);\n    setTimeout(() => {\n      setIsTooltipDisplayed(false);\n    }, 1000);\n  }\n\n  return (\n    <Button\n      small\n      bold\n      onClick={() => {\n        if (navigator.clipboard && navigator.permissions) {\n          navigator.clipboard.writeText(toCopy).then(() => displayTooltip());\n        } else if (document.queryCommandSupported('copy')) {\n          copyToClipboardWithCommand(toCopy);\n          displayTooltip();\n        }\n      }}\n      {...props}\n    >\n      {children}\n      <Popup isTooltipDisplayed={isTooltipDisplayed}>Copied</Popup>\n    </Button>\n  );\n};\n\nexport default CopyToClipboard;\n","import React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport LinkExternal from '../../components/Link/LinkExternal';\nimport { Modal } from '../ModalProvider';\nimport CopyToClipboard from './CopyToClipboard';\nimport { connectorLocalStorageKey } from './config';\n\n\n\ninterface Props {\n  account: string;\n  logout: () => void;\n  onDismiss?: () => void;\n}\n\nconst AccountModal: React.FC<Props> = ({ account, logout, onDismiss = () => null }) => (\n  <Modal title='Your wallet' onDismiss={onDismiss}>\n    <b>{account}</b><br />\n    <LinkExternal href={`https://etherscan.io/address/${account}`} >\n      View on Etherscan\n    </LinkExternal>\n    <CopyToClipboard toCopy={account}>Copy Address</CopyToClipboard>\n    <Button\n      scale='sm'\n      variant='secondary'\n      onClick={() => {\n        logout();\n        window.localStorage.removeItem(connectorLocalStorageKey);\n        onDismiss();\n      }}\n    >Logout</Button>\n  </Modal>\n);\n\nexport default AccountModal;\n","import React from 'react';\nimport { useModal } from '../ModalProvider';\nimport ConnectModal from './ConnectModal';\nimport AccountModal from './AccountModal';\nimport { Login } from './types';\n\n\n\ninterface ReturnType {\n  onPresentConnectModal: () => void;\n  onPresentAccountModal: () => void;\n}\n\nconst useWalletModal = (login: Login, logout: () => void, account?: string): ReturnType => {\n  const [onPresentConnectModal] = useModal(<ConnectModal login={login} />);\n  const [onPresentAccountModal] = useModal(<AccountModal account={account || ''} logout={logout} />);\n  return { onPresentConnectModal, onPresentAccountModal };\n};\n\nexport default useWalletModal;\n"],"sourceRoot":""}