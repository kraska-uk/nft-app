{"version":3,"sources":["pages/AdminPage/index.js","pages/AdminPage/AdminPage.js"],"names":["hot","module","props","useEagerConnect","context","useActiveWeb3React","library","chainId","account","getContract","active","error","withSigner","signer","getSigner","Contract","KraskaNftAddress","KraskaNftAbi","toastTxSend","tx","txIsPending","href","hash","getExternalLinkProps","toast","promise","wait","pending","render","icon","success","useState","updated","info","setInfo","disabledUpdate","setDisabledUpdate","handleUpdate","a","newInfo","contract","name","symbol","owner","totalSupply","toString","contractURI","baseTokenURI","tokenURI","console","code","message","useEffect","newOwner","newContractURI","newBaseTokenURI","state","setState","handleChange","e","value","handleSetNewOwner","utils","isAddress","transferOwnership","handleSetContractURI","setContractURI","handleSetBaseTokenURI","setBaseTokenURI","title","as","Content","Subheader","fluid","color","onClick","disabled","celled","Row","Column","width","required","label","placeholder","onChange","action","content"],"mappings":"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","file":"static/js/8.6bd8b0af.chunk.js","sourcesContent":["export { default } from './AdminPage';\n","import React, { useState, useEffect } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { Container, Header, Grid, Input, Button } from 'semantic-ui-react';\nimport Page from '../../components/Page';\n\nimport { toast } from 'react-toastify';\nimport { useEagerConnect, useActiveWeb3React } from '../../hooks/index';\n\nimport { Contract, utils } from 'ethers';\nimport { KraskaNftAddress } from '../../constants';\nimport KraskaNftAbi from '../../abis/KraskaNftAbi.json';\nimport getExternalLinkProps from '../../utils/getExternalLinkProps';\n\n\n\nfunction AdminPage(props) {\n  const triedEager = useEagerConnect();\n  const context = useActiveWeb3React();\n  const { library, chainId, account, active, error } = context;\n\n  const getContract = (withSigner = false) => {\n    if (withSigner) {\n      const signer = library.getSigner();\n      return new Contract(KraskaNftAddress[chainId], KraskaNftAbi, signer);\n    } else {\n      return new Contract(KraskaNftAddress[chainId], KraskaNftAbi, library);\n    }\n  }\n  const toastTxSend = (tx) => {\n    const txIsPending = (<div>Transaction is pending <a href={'https://etherscan.io/tx/' + tx.hash} {...getExternalLinkProps}>{tx.hash}</a></div>);\n    toast.promise(\n      tx.wait(1),\n      {\n        pending: {\n          render() {\n            return (txIsPending);\n          },\n          icon: \"ðŸš€\",\n        },\n        success: 'Transaction done ðŸ‘Œ',\n        error: 'Transaction rejected ðŸ¤¯'\n      }\n    );\n  }\n\n\n  const [info, setInfo] = useState({ updated: false });\n  const [disabledUpdate, setDisabledUpdate] = useState(false);\n  const handleUpdate = async () => {\n    setDisabledUpdate(true);\n    try {\n      const newInfo = { updated: true };\n      const contract = getContract();\n\n      const name = await contract.name();\n      newInfo['name'] = name;\n\n      const symbol = await contract.symbol();\n      newInfo['symbol'] = symbol;\n\n      const owner = await contract.owner();\n      newInfo['owner'] = owner;\n\n      const totalSupply = await contract.totalSupply();\n      newInfo['totalSupply'] = totalSupply.toString();\n\n      const contractURI = await contract.contractURI();\n      newInfo['contractURI'] = contractURI;\n\n      try {\n        const baseTokenURI = await contract.baseTokenURI();\n        newInfo['baseTokenURI'] = baseTokenURI;\n      } catch (error) { }\n\n      const tokenURI = await contract.tokenURI(0);\n      newInfo['tokenURI'] = tokenURI;\n\n      setInfo(newInfo);\n    } catch (error) {\n      console.error(error);\n      toast.error(`${error.code}: ${error.message}`);\n    }\n    setDisabledUpdate(false);\n  }\n  useEffect(() => {\n    if (!info.updated && library) {\n      handleUpdate();\n    }\n  }, [info, library]);\n\n\n  const [state, setState] = useState({\n    newOwner: '',\n    newContractURI: '',\n    newBaseTokenURI: '',\n  });\n  const handleChange = (e, { name, value }) => {\n    setState({ ...state, [name]: value, });\n  }\n\n  const handleSetNewOwner = async () => {\n    if (!utils.isAddress(state.newOwner)) return;\n    try {\n      const contract = getContract(true);\n      const tx = await contract.transferOwnership(state.newOwner);\n      toastTxSend(tx);\n    } catch (error) {\n      console.error(error);\n      toast.error(`${error.code}: ${error.message}`);\n    }\n  }\n\n  const handleSetContractURI = async () => {\n    if (state.newContractURI === '') return;\n    try {\n      const contract = getContract(true);\n      const tx = await contract.setContractURI(state.newContractURI);\n      toastTxSend(tx);\n    } catch (error) {\n      console.error(error);\n      toast.error(`${error.code}: ${error.message}`);\n    }\n  }\n\n  const handleSetBaseTokenURI = async () => {\n    if (state.newBaseTokenURI === '') return;\n    try {\n      const contract = getContract(true);\n      const tx = await contract.setBaseTokenURI(state.newBaseTokenURI);\n      toastTxSend(tx);\n    } catch (error) {\n      console.error(error);\n      toast.error(`${error.code}: ${error.message}`);\n    }\n  }\n\n\n  return (\n    <Page title={'Admin'}>\n      <Container>\n        <Header as='h1'>\n          <Header.Content>\n            Admin Page\n            <Header.Subheader>Contract: <a\n              href={'https://etherscan.io/token/' + KraskaNftAddress[chainId]}\n              {...getExternalLinkProps()}\n            >{KraskaNftAddress[chainId]}</a>\n            </Header.Subheader>\n          </Header.Content>\n        </Header>\n\n        <Button fluid color='green' onClick={handleUpdate} disabled={disabledUpdate}>Update</Button>\n        <Grid celled>\n          <Grid.Row>\n            <Grid.Column width={3}>name:</Grid.Column>\n            <Grid.Column width={12}>{info.name}</Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row>\n            <Grid.Column width={3}>ymbol:</Grid.Column>\n            <Grid.Column width={12}>{info.symbol}</Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row>\n            <Grid.Column width={3}>owner:</Grid.Column>\n            <Grid.Column width={12}>\n              {info.owner === account && account ? <b>You</b> : null} <a\n                href={'https://etherscan.io/address/' + info.owner}\n                {...getExternalLinkProps()}\n              >{info.owner}</a>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column width={3}>transferOwnership:</Grid.Column>\n            <Grid.Column width={12}>\n              <Input fluid required\n                name='newOwner' label='newOwner:' placeholder='Ethereum Address: 0x...'\n                value={state.newOwner}\n                error={!utils.isAddress(state.newOwner)}\n                success={utils.isAddress(state.newOwner)}\n                onChange={handleChange}\n                action={<Button\n                  color='red' content='Set'\n                  disabled={!utils.isAddress(state.newOwner)}\n                  onClick={handleSetNewOwner}\n                />}\n              />\n            </Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row>\n            <Grid.Column width={3}>contractURI:</Grid.Column>\n            <Grid.Column width={12}><a\n              href={info.contractURI}\n              {...getExternalLinkProps()}\n            >{info.contractURI}</a>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column width={3}>setContractURI:</Grid.Column>\n            <Grid.Column width={12}>\n              <Input fluid required\n                name='newContractURI' label='newContractURI:' placeholder='URI string'\n                value={state.newContractURI}\n                onChange={handleChange}\n                action={<Button\n                  color='red' content='Set'\n                  onClick={handleSetContractURI}\n                />}\n              />\n            </Grid.Column>\n          </Grid.Row>\n\n\n          <Grid.Row>\n            <Grid.Column width={3}>baseTokenURI:</Grid.Column>\n            <Grid.Column width={12}><a\n              href={info.baseTokenURI}\n              {...getExternalLinkProps()}\n            >{info.baseTokenURI}</a>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column width={3}>setBaseTokenURI:</Grid.Column>\n            <Grid.Column width={12}>\n              <Input fluid required\n                name='newBaseTokenURI' label='newBaseTokenURI:' placeholder='URI string'\n                value={state.newBaseTokenURI}\n                onChange={handleChange}\n                action={<Button\n                  color='red' content='Set'\n                  onClick={handleSetBaseTokenURI}\n                />}\n              />\n            </Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row>\n            <Grid.Column width={3}>tokenURI(0):</Grid.Column>\n            <Grid.Column width={12}><a\n              href={info.tokenURI}\n              {...getExternalLinkProps()}\n            >{info.tokenURI}</a>\n            </Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row>\n            <Grid.Column width={3}>totalSupply:</Grid.Column>\n            <Grid.Column width={12}>{info.totalSupply}</Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row>\n            <Grid.Column>\n            </Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row>\n            <Grid.Column>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default hot(module)(AdminPage);\n"],"sourceRoot":""}